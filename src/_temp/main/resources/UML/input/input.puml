@startuml
package input {

    +interface Queueable{
        ..
            +{method} Queueable getTail ()
            +{method} Queueable getHead ()
            +{method} void setTail ()
            +{method} void setHead ()
        }

    ~abstract class Queueability{
            ~{field} Queueable head
            ~{field} Queueable tail
        --
            +{method} Queueable getTail ()
            +{method} Queueable getHead()
            +{method} void setTail (Queueable)
            +{method} void setHead (Queueable)
    }

    ~interface Queuing{
        ..default..
            +{method} void convertToTree()
            +{method} void convertToLocalTree(Queueable)
            +{method} void updatedQueue (Queuing, Enqueued)
            +{method} Queueable updateQueue (Queueable)
        ..
            +{method} void updateCounters(Queueable)
            +{method} void updateCounters()
            +{method} int getCounter(Queueable)
            +{method} int getCounter()
            +{method} int currentPriorityIndex()
    }

    ~class NodeQueue{
            +{field} int[] NodeCounter
        --@Override--
            ~{method} : /.../
    }

    +interface Enqueued {
        ..default..
            +{method} Nodeable unWrap ()
        ..
            +{method} int getPriorityIndex ()
            +{method} void setPriorityIndex ()
            +{method void setPriorityIndex (Typical)
            +{method} Typical getType ()
            +{method} Nodeable getNode ()
            +{method} void setType (Typical)
            +{method} void setNode (Nodeable)
            +{method} void setNode ()
    }

    ~class Queuer{
            ~{field} priorityIndex
            ~{field} Typical getType
            ~{field} Nodeable node
        --@Override--
            +{method} : /.../
    }

    Enqueued    -|>     Queueable   :   ext
    Queueable   <|-     Queuing     :   ext

    Queueability   <|-     NodeQueue   :   ext
    Queuer      -|>     Queueability   :   ext

    Enqueued    <|--    Queuer      :   impl
    Queuing     <|--    NodeQueue   :   impl
}
@enduml