@startuml

package input{

    interface Parsable{
            +{method} void addToCache (char)
            +{method} double clearCache()
    }

    class ValueParser{
            ~{field}{static} String parserCache
            ~{field}{static} bool isNegative
            __
            ~{method}{static}switchSign ()
            ..
            ~{method} @Ovr addCharToCache (char)
            ~{method} @Ovr clearCache ()
    }

    interface Queueable{
            +{method} void addToQueue (Queuer)
            +{method} void take fromQueue ()
    }

    class _InputQueue{
            ~{field} int length
            __
            ~{method} @Ovr void addToQueue (Queuer)
            ~{method} @Ovr void takeFromeQueue (Queuer)
    }

    class Queuer{
            +{field} Queable previous
            ~{field} Node node
    }

    Parsable        <--     ValueParser     : impl
    Queuer          <|--*    _InputQueue     : ext
    Queueable       <--     Queuer          : impl

@enduml