@startuml

package calculation{

    +abstract Node{
            ~{static} Node mainRoot
        ..
            ~{field} Node localRoot
            ~{field} Node localLeft
            ~{field} Node localRite
        ..
            ~{field} dbl value = NaN
            ~{field} NodeType type
        __
            +{method}calculate (dbl 1, dbl 2)
            ~{method} valueIsNaN ()
        ..
            +{method} setValue ()
            ~{method} setValue (value)
    }

    +class Value{
            ~{static} final NodeType classType = OPERAND
    }

    ~abstract Calculation{
            ~{static} final NodeType classType = OPERATOR
    }

    package calculations <<Rectangle>> {
        class Calculation_?{
            +{method} @Ovr calculate ()
        }
    }

    ~enum NodeType{
            OPERATOR
            OPERAND
    }
}

    Node            o..     Node
    Node            <|--    Value                   : ext
    Node            <|--    Calculation             : ext
    Calculation     <--     calculations    : impl
    Calculation     *..     Value
    Calculation     ..|>      NodeType
    Value           ..|>      NodeType

@enduml